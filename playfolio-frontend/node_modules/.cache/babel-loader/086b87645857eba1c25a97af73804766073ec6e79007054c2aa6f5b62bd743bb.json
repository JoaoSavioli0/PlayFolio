{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"py-12\"\n};\nconst _hoisted_2 = {\n  class: \"flex\"\n};\nconst _hoisted_3 = {\n  class: \"w-[75%] p-6\"\n};\nconst _hoisted_4 = {\n  class: \"flex flex-col gap-y-2\"\n};\nconst _hoisted_5 = {\n  class: \"rounded-xl w-full h-[80px] flex overflow-hidden border-[1px] border-zinc-600\"\n};\nconst _hoisted_6 = {\n  class: \"w-[60%] relative\"\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Card \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jogos, jogo => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n      class: \"w-full h-full z-30 bg-[#262729]/50 backdrop-blur-md absolute\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"img\", {\n      src: $data.capasJogos[jogo.id],\n      class: \"object-fit absolute w-full h-auto z-20 -translate-y-1/2 top-1/2\"\n    }, null, 8 /* PROPS */, _hoisted_7), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n      class: \"absolute w-full h-full gradiente-card z-30\"\n    }, null, -1 /* HOISTED */))]), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n      class: \"w-[60%] bg-[#262729]\"\n    }, null, -1 /* HOISTED */))]);\n  }), 256 /* UNKEYED_FRAGMENT */))])]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"w-[25%] p-6\"\n  }, null, -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_Fragment","_renderList","$data","jogos","jogo","_hoisted_5","_hoisted_6","src","capasJogos","id","_hoisted_7"],"sources":["C:\\Users\\joao.savioli\\Documents\\GitHub\\PlayFolio\\Playfolio project\\playfolio-frontend\\src\\components\\JogosComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"py-12\">\r\n        <div class=\"flex\">\r\n            <div class=\"w-[75%] p-6\">\r\n                <div class=\"flex flex-col gap-y-2\">\r\n                    <!-- Card -->\r\n                    <div class=\"rounded-xl w-full h-[80px] flex overflow-hidden border-[1px] border-zinc-600\"\r\n                        v-for=\"jogo in jogos\">\r\n                        <div class=\"w-[60%] relative\">\r\n                            <div class=\"w-full h-full z-30 bg-[#262729]/50 backdrop-blur-md absolute\"></div>\r\n                            <img :src=\"capasJogos[jogo.id]\"\r\n                                class=\"object-fit absolute w-full h-auto z-20 -translate-y-1/2 top-1/2\">\r\n                            <div class=\"absolute w-full h-full gradiente-card z-30\"></div>\r\n                        </div>\r\n                        <div class=\"w-[60%] bg-[#262729]\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"w-[25%] p-6\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: \"Jogos\",\r\n    data() {\r\n        return {\r\n            jogos: [],\r\n            genreIds: [],\r\n            genresNomes: {},\r\n            capasJogos: {},\r\n        }\r\n    },\r\n    mounted() {\r\n        this.carregaJogos()\r\n    },\r\n    methods: {\r\n        async carregaJogos() {\r\n            const body = `fields *; sort value desc; limit 10; sort rating_count desc;`;\r\n\r\n            try {\r\n                const response = await axios.post(\"/v4/games\", body, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Client-ID': \"i79ndcjylui2396ezi2v752sc9dze0\",\r\n                        'Authorization': `Bearer h6v8ywcqhwyyhj140u70v95rss6sga`,\r\n                        'Content-Type': 'text/plain'\r\n                    }\r\n                })\r\n                this.jogos = response.data\r\n                console.log(\"this.jogos: \" + JSON.stringify(this.jogos))\r\n                await this.carregaCapas(this.jogos.map((e) => e.id))\r\n                await this.carregaTags(this.jogos)\r\n\r\n\r\n            } catch (error) {\r\n                console.error(\"Erro: \" + error)\r\n            }\r\n        },\r\n\r\n        async carregaCapas(jogosId) {\r\n            const requests = jogosId.map(async (id) => {\r\n                const body = `fields url; where game = ${id}; limit 1;`\r\n                try {\r\n                    const response = await axios.post(\"/v4/covers\", body, {\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Client-ID': \"i79ndcjylui2396ezi2v752sc9dze0\",\r\n                            'Authorization': `Bearer h6v8ywcqhwyyhj140u70v95rss6sga`,\r\n                            'Content-Type': 'text/plain'\r\n                        }\r\n                    })\r\n                    let imagem = response.data[0]\r\n                    if (imagem && imagem.url) {\r\n                        this.capasJogos[id] = imagem.url.replace(\"thumb\", \"720p\")\r\n                    }\r\n                    console.log(\"this.capaJogos: \" + this.capasJogos)\r\n                } catch (error) {\r\n                    console.error(\"Erro carregando imagem: \" + error)\r\n                }\r\n            })\r\n            await Promise.all(requests)\r\n        },\r\n\r\n        async carregaTags(jogos) {\r\n            for (let jogo of jogos) {\r\n                for (let genreId of jogo.genres) {\r\n                    if (!this.genreIds.includes(genreId)) {\r\n                        this.genreIds.push(genreId)\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = `fields name; where id = (${this.genreIds.join(\", \")});`\r\n            try {\r\n                const response = await axios.post(\"/v4/genres\", body, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Client-ID': \"i79ndcjylui2396ezi2v752sc9dze0\",\r\n                        'Authorization': `Bearer h6v8ywcqhwyyhj140u70v95rss6sga`,\r\n                        'Content-Type': 'text/plain'\r\n                    }\r\n                })\r\n\r\n                for (let data of response.data) {\r\n                    this.genresNomes[data.id] = data.name\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Erro carregando generos: \" + error)\r\n            }\r\n            console.log(\"genreNomes: \" + this.genresNomes)\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.gradiente-card {\r\n    background: rgb(38, 39, 41);\r\n    background: linear-gradient(270deg, rgba(38, 39, 41, 1) 0%, rgba(0, 0, 0, 0) 100%);\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAa;;EACfA,KAAK,EAAC;AAAuB;;EAEzBA,KAAK,EAAC;AAA8E;;EAEhFA,KAAK,EAAC;AAAkB;mBARrD;;uBACIC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBFC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBFD,mBAAA,CAcM,OAdNE,UAcM,GAbFF,mBAAA,CAYM,OAZNG,UAYM,GAXFC,mBAAA,UAAa,G,kBACbN,mBAAA,CASMO,SAAA,QAf1BC,WAAA,CAOuCC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBADfX,mBAAA,CASM,OATNY,UASM,GAPFV,mBAAA,CAKM,OALNW,UAKM,G,0BAJFX,mBAAA,CAAgF;MAA3EH,KAAK,EAAC;IAA8D,6BACzEG,mBAAA,CAC4E;MADtEY,GAAG,EAAEL,KAAA,CAAAM,UAAU,CAACJ,IAAI,CAACK,EAAE;MACzBjB,KAAK,EAAC;4BAXtCkB,UAAA,G,0BAY4Bf,mBAAA,CAA8D;MAAzDH,KAAK,EAAC;IAA4C,4B,6BAE3DG,mBAAA,CAAwC;MAAnCH,KAAK,EAAC;IAAsB,4B;kEAI7CG,mBAAA,CAA+B;IAA1BH,KAAK,EAAC;EAAa,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}